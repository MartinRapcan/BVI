version: '3'

services:
  payload:
    image: node:20-alpine
    restart: always
    ports:
      - '0.0.0.0:3000:3000'  # Expose on all network interfaces
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    working_dir: /home/node/app/
    command: sh -c "corepack enable && corepack prepare pnpm@9.0.0 --activate && pnpm install && HOST=0.0.0.0 pnpm dev"
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - PAYLOAD_PUBLIC_SERVER_URL=http://0.0.0.0:3000
      - REDIS_URL=redis://redis:6379
    networks:
      - app-network

  # Ensure your DATABASE_URI uses 'postgres' as the hostname
  postgres:
    restart: always
    image: postgres:latest
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - app-network

  # Redis for caching dynamic data
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - app-network

  # Redis Commander - Web UI for Redis monitoring
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin123
    depends_on:
      - redis
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  node_modules:
  redis_data: