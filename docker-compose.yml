version: '3'

services:
  # Your Payload app
  # payload:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.prod
  #   restart: always
  #   ports:
  #     - '3000:3000'  # Direct access for production
  #   depends_on:
  #     - postgres
  #     - redis
  #   env_file:
  #     - .env
  #   environment:
  #     - NODE_ENV=production
  #     - HOST=0.0.0.0
  #     - PAYLOAD_PUBLIC_SERVER_URL=http://0.0.0.0:3000
  #     - REDIS_URL=redis://redis:6379
  #   networks:
  #     - app-network
  payload:
    image: node:20-alpine
    restart: always
    ports:
      - '3000:3000'  # Direct access for development
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    working_dir: /home/node/app/
    command: sh -c "corepack enable && corepack prepare pnpm@9.0.0 --activate && pnpm install && pnpm run build && HOST=0.0.0.0 pnpm start"
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - PAYLOAD_PUBLIC_SERVER_URL=http://0.0.0.0:3000
    networks:
      - app-network

  # Nginx in the middle
  nginx:
    image: nginx:alpine
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"  # Direct access to Nginx
    command: sh -c "apk add --no-cache curl && nginx -g 'daemon off;'"
    networks:
      - app-network

  # Varnish as a caching layer in front of Nginx
  varnish:
    image: varnish:latest
    command: -n varnish  # Add the instance name here
    ports:
      - "8000:80"
      - "6082:6082"
    volumes:
      - ./docker/varnish/default.vcl:/etc/varnish/default.vcl:ro
      - varnish-vsm:/var/lib/varnish
    depends_on:
      - nginx
    networks:
      - app-network

  # Your other services
  postgres:
    restart: always
    image: postgres:latest
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - app-network
    
  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      # - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - app-network

  varnish-exporter:
    image: varnish-stat-exporter
    command: /tmp/prometheus_varnish_exporter -n varnish -verbose
    volumes:
      - varnish-vsm:/var/lib/varnish
    depends_on:
      - varnish
    ports:
      - "9131:9131"
    build:
      dockerfile_inline: |
        FROM curlimages/curl
        RUN set -ex; \
            cd /tmp/; \
            curl -L https://github.com/jonnenauha/prometheus_varnish_exporter/releases/download/1.6.1/prometheus_varnish_exporter-1.6.1.linux-amd64.tar.gz | tar xvzf - --strip 1
        FROM varnish
        COPY --from=0 /tmp/prometheus_varnish_exporter /tmp/prometheus_varnish_exporter
    networks:
      - app-network

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    command:
      - -nginx.scrape-uri=http://nginx/nginx_status
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    networks:
      - app-network

  nginx-vts-exporter:
    image: sophos/nginx-vts-exporter:latest
    environment:
      - NGINX_STATUS=http://nginx/status/format/json
    ports:
      - "9913:9913"
    depends_on:
      - nginx
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  node_modules:
  prometheus_data:
  grafana_data:
  varnish-vsm: 