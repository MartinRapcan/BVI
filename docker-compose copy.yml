version: '3'

services:
  # Your Payload app
  # payload:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.prod
  #   restart: always
  #   ports:
  #     - '3000:3000'  # Direct access for production
  #   depends_on:
  #     - postgres
  #     - redis
  #   env_file:
  #     - .env
  #   environment:
  #     - NODE_ENV=production
  #     - HOST=0.0.0.0
  #     - PAYLOAD_PUBLIC_SERVER_URL=http://0.0.0.0:3000
  #     - REDIS_URL=redis://redis:6379
  #   networks:
  #     - app-network
  payload:
    image: node:20-alpine
    restart: always
    ports:
      - '3000:3000'  # Direct access for development
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    working_dir: /home/node/app/
    command: sh -c "corepack enable && corepack prepare pnpm@9.0.0 --activate && pnpm install && pnpm run build && HOST=0.0.0.0 pnpm start"
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - PAYLOAD_PUBLIC_SERVER_URL=http://0.0.0.0:3000
      - REDIS_URL=redis://redis:6379
    networks:
      - app-network

  # Nginx in the middle
  nginx:
    image: nginx:alpine
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"  # Direct access to Nginx
    command: sh -c "apk add --no-cache curl && nginx -g 'daemon off;'"
    networks:
      - app-network

  # Varnish as a caching layer in front of Nginx
  varnish:
    image: varnish:latest
    ports:
      - "8000:80"  # Access Varnish on port 8000
    volumes:
      - ./docker/varnish/default.vcl:/etc/varnish/default.vcl:ro
    command: -f /etc/varnish/default.vcl -s malloc,256m -T localhost:6082
    depends_on:
      - nginx
    networks:
      - app-network

  # Your other services
  postgres:
    restart: always
    image: postgres:latest
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - app-network

  # redis:
  #   image: redis:alpine
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
  #   networks:
  #     - app-network

  # redis-commander:
  #   image: rediscommander/redis-commander:latest
  #   restart: always
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - REDIS_HOSTS=local:redis:6379
  #     - HTTP_USER=admin
  #     - HTTP_PASSWORD=admin123
  #   depends_on:
  #     - redis
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  node_modules:
  redis_data: